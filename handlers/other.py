from aiogram import types, Dispatcher

from keyboards_and_buttons.keyboards import kb_start_client


#######################################################################################################################


async def roma(message : types.Message):
    if message.from_user.id == 504320960:
        await message.answer('üëã <b>–°–∞–ª–∞–º, —Ö–∞–ª—è–≤–Ω—ã—Ö –ø—è—Ç—å —Ç–µ—Å—Ç–æ–≤ —Ç–µ–±–µ</b> üòÇ\n\n'
                             '<i>P.S.: —è –∑–Ω–∞—é —á—Ç–æ —Ç–µ–±–µ –æ–Ω–∏ –Ω–∞—Ö–µ—Ä –Ω–µ –Ω—É–∂–Ω—ã, '
                             '–Ω–æ —Å–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ –º–æ—Ä–∞–ª—å–Ω—ã—é –ø–æ–º–æ—â—å –≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ ‚ùó</i>',
                             reply_markup=kb_start_client, parse_mode='html')

async def trash(message : types.Message):
    await message.answer('–•–∑ —â–æ —Ü–µ, —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑ ü§∑', reply_markup=kb_start_client)


#######################################################################################################################


def register_handlers_other(dp : Dispatcher):
    dp.register_message_handler(roma, text='—è —Ç—É—Ç')
    dp.register_message_handler(trash)