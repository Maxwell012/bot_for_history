from aiogram.dispatcher.filters import Text
from aiogram import types, Dispatcher

from keyboards_and_buttons.keyboards import kb_start_client
from keyboards_and_buttons.buttons import inline_for_start_client, inline_enter_data, \
                                          inline_for_money, inline_for_menu, inline_for_change_data
from FSM.client import enter_data, enter_link, register_FSM_client
from data_base.all_connection import main_thread_connection, db


#######################################################################################################################


async def start(message : types.Message):
    await message.answer('üëã –ü—Ä–∏–≤—ñ—Ç\n '
                         '–Ø –º–æ–∂—É –ø—Ä–æ–π—Ç–∏ –±—É–¥—å-—è–∫–∏–π —Ç–µ—Å—Ç –∑ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏', \
                         reply_markup=inline_for_start_client)
    await message.answer('Let`s go...', reply_markup=kb_start_client)


#######################################################################################################################


async def test(message : types.Message):
    check_id = await db.db_check_id(message.from_user.id, main_thread_connection)
    if check_id:
        amount_test = await db.db_get_amount_test(message.from_user.id, main_thread_connection)
        if amount_test <= 0:
            await message.answer('–í —Ç–µ–±–µ –Ω–µ –∑–∞–ª–∏—à–∏–ª–æ—Å—è –±—ñ–ª—å—à–µ —Å–ø—Ä–æ–± –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—É ‚ùó',
                                 reply_markup=inline_for_money)
        else:
            await enter_link(message)
    else:
        await message.answer('üìù –í–∞–º —Å–ø–æ—á–∞—Ç–∫—É —Ç—Ä–µ–±–∞ –∑–∞–ø–æ–≤–Ω–∏—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ '
                             '—è–∫—ñ –±—É–¥—É—Ç—å –≤—ñ–¥–ø—Ä–∞–≤–ª—è—Ç–∏—Å—è –ø—ñ—Å–ª—è –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è —Ç–µ—Å—Ç—É)',
                             reply_markup=inline_enter_data)

async def settings(message : types .Message):
    await message.answer('–©–æ –≤–∏ –±–∞–∂–∞—î—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ ‚ùì', reply_markup=inline_for_menu)

async def contacts(message : types.Message):
    await message.answer('‚úç –ü–∏—à–∏ @david_krbnv –∑ –±—É–¥—å-—è–∫–∏—Ö –ø–∏—Ç–∞–Ω—å:\n' 
                                  'üî® –Ω–µ–ø–æ–ª–∞–¥–∫–∏ –≤ —Ä–æ–±–æ—Ç—ñ —Å–µ—Ä–≤—ñ—Å—É;\n'
                                  'üí° –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó —Ç–∞ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è;\n'
                                  '‚ûï –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ –Ω–æ–≤–æ—ó –º–æ–≤–∏;\n'
                                  'üí∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≥—Ä–æ—à–µ–π;\n'
                                  'üòâ –±—É–¥—å-—â–æ —ñ–Ω—à–µ...\n\n'
                                  f'<i>–¢–≤—ñ–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä: {message.chat.id}</i>', parse_mode='html')
    await message.answer_contact('+48786467177', 'üá∫üá¶ Admin')


#######################################################################################################################


# async def send_link(callback: types.CallbackQuery, state: FSMContext):
#     photo = types.InputFile("foto/foto_ex_link.png")
#     caption = '–ú–µ–Ω—ñ –ø–æ—Ç—Ä—ñ–±–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è —è–∫–µ –±—É–¥–µ –≤–∫–∞–∑—É–≤–∞—Ç–∏ –Ω–∞ —Å—Ö–æ–∂—É —Å—Ç–æ—Ä—ñ–Ω–∫—É —è–∫ —Ü—è ‚¨Ü.\n\n' \
#               '–ö–æ–ª–∏ —è –≤—á–∏–≤—Å—è –Ω–∞ –¥–∏—Å—Ç–∞–Ω—Ü—ñ–π—Ü—ñ, ' \
#               '–Ω–∞–º –≤—á–∏—Ç–µ–ª—å —ñ—Å—Ç–æ—Ä—ñ—ó –≤—ñ–¥–ø—Ä–∞–≤–ª—è–≤ –≤ –∫–æ–º–µ–Ω—Ç–∞—Ä—è—Ö Microsoft Teams –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ —Ç–µ—Å—Ç, ' \
#               '–º–æ–∂–ª–∏–≤–æ —É –≤–∞—Å —Ç–∞–∫ —Å–∞–º–æ ü´†'
#     await callback.message.answer_photo(photo=photo, caption=caption, reply_markup=kb_cancel)
#     await callback.message.delete()
#     await callback.answer()

async def personal_data(callback: types.CallbackQuery):
    await callback.answer()
    data = await db.db_get_data(callback.message.chat.id, main_thread_connection)
    if data:
        await callback.message.answer(f'üîπ –ü—Ä—ñ–∑–≤–∏—â–µ: {data[0]}\n'
                                      f'üîπ Email: {data[1]}\n'
                                      f'üîπ –ß–∞—Å –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω–Ω—è: {data[2]} —Å–µ–∫—É–Ω–¥\n'
                                      f'üîπ –ö-—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π: {data[3]}',
                                      reply_markup=inline_for_change_data)
    else:
        await enter_data(callback.message, False)

# @dp.callback_query_handler(Text=('change_data'))
async def change_data(callback: types.CallbackQuery):
    await enter_data(callback.message)
    await callback.answer()

async def money_callback(callback: types.CallbackQuery):
    free_test = await db.db_get_amount_test(callback.message.chat.id, main_thread_connection)

    await callback.message.answer(f'–í —Ç–µ–±–µ –∑–∞–ª–∏—à–∏–ª–æ—Å—è - {free_test} - —Å–ø—Ä–æ–± –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω—å —Ç–µ—Å—Ç—É ‚ùó',
                                      reply_markup=inline_for_money)
    await callback.answer()

async def money_commands(message: types.Message):
    free_test = await db.db_get_amount_test(message.chat.id, main_thread_connection)

    await message.answer(f'–í —Ç–µ–±–µ –∑–∞–ª–∏—à–∏–ª–æ—Å—è - {free_test} - —Å–ø—Ä–æ–± –ø—Ä–æ—Ö–æ–¥–∂–µ–Ω—å —Ç–µ—Å—Ç—É ‚ùó',
                                      reply_markup=inline_for_money)


#######################################################################################################################


# @dp.callback_query_handler(Text=('top_up'))
async def top_up(callback: types.CallbackQuery):
    await callback.message.answer('üîπ –ú–æ–Ω–æ - <a>https://send.monobank.ua/7Pxyk7KLMJ</a>\n\n'
                                  'üîπ –ü—Ä–∏–≤–∞—Ç - <a>https://privatbank.ua/ru/sendmoney?payment=fe75455d04</a>\n\n'
                                  '<b>1 —Ç–µ—Å—Ç      ---     15 –≥—Ä–Ω\n'
                                  '3 —Ç–µ—Å—Ç–∞     ---     36 –≥—Ä–Ω\n'
                                  '7 —Ç–µ—Å—Ç—ñ–≤    ---     70 –≥—Ä–Ω</b>\n\n'
                                  '–í –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—ñ –ø–ª–∞—Ç–µ–∂–∞, –≤—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å–≤—ñ–π —ñ–Ω–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä. '
                                  '–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ —á–µ—Ä–µ–∑ –¥–µ–∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω —è –∑–∞—Ä–∞—Ö—É—é –≤–∞–º —Ç–µ—Å—Ç–∏ ‚Äº\n\n'
                                  f'<i>–¢–≤—ñ–π —ñ–Ω–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä: <b>{callback.message.chat.id}</b></i>\n\n'
                                  'P.S.: —Ç—Ä–æ—Ö–∏ –ø—ñ–∑–Ω—ñ—à–µ –æ–ø–ª–∞—Ç–∞ —Å—Ç–∞–Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–æ–≤–∞–Ω–æ—é !',
                                  parse_mode='html', disable_web_page_preview=True)
    await callback. answer()

async def what_send_link(message: types.Message):
    await message.answer()


#######################################################################################################################


# @dp.callback_query_handler(Text('arr_correct'))
async def all_correct(callback : types.CallbackQuery):
    await callback.message.answer('–î–æ–±—Ä–µ, –∑–∞–ø–∏—Å–∞–≤ üëå', reply_markup=kb_start_client)
    await callback.message.delete()
    await callback.answer()













#######################################################################################################################


def register_handlers_client(dp : Dispatcher):
    dp.register_message_handler(start, commands=['start', 'help'])
    ##############################################################
    dp.register_message_handler(test, commands=['test'])
    dp.register_message_handler(test, text='üèÅ –¢–µ—Å—Ç')

    dp.register_message_handler(settings, commands=['settings'])
    dp.register_message_handler(settings, text='‚öô –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è')

    dp.register_message_handler(contacts, commands=['support'])
    dp.register_message_handler(contacts, text="‚úç –ó–≤'—è–∑–æ–∫")
    ##############################################################
    # dp.register_callback_query_handler(send_link, Text('send_link'), state=FSMlink.link)
    dp.register_callback_query_handler(personal_data, Text('personal_data'))
    dp.register_callback_query_handler(change_data, Text('change_data'))
    dp.register_message_handler(money_commands, commands=['balance'])
    dp.register_callback_query_handler(money_callback, Text('money'))
    ##############################################################
    dp.register_callback_query_handler(top_up, Text('top_up'))
    ##############################################################
    dp.register_callback_query_handler(all_correct, Text('all_correct'))

    register_FSM_client(dp)